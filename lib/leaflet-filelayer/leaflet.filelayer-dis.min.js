(function(factory,window){if(typeof define==="function"&&define.amd&&window.toGeoJSON&&window.readXlsxFile){define(["leaflet"],function(L){factory(L,window.toGeoJSON,window.readXlsxFile)})}else if(typeof module==="object"&&module.exports){module.exports=function(root,L,toGeoJSON){if(L===undefined){if(typeof window!=="undefined"){L=require("leaflet")}else{L=require("leaflet")(root)}}if(toGeoJSON===undefined){if(typeof window!=="undefined"){toGeoJSON=require("togeojson")}else{toGeoJSON=require("togeojson")(root)}}factory(L,toGeoJSON);return L}}else if(typeof window!=="undefined"&&window.L&&window.toGeoJSON&&window.readXlsxFile){factory(window.L,window.toGeoJSON,window.readXlsxFile)}})(function fileLoaderFactory(L,toGeoJSON,readXlsxFile){var FileLoader=L.Layer.extend({options:{layer:L.geoJson,MultiPoint:true,layerOptions:{},fileSizeLimit:1024,GpsKmlGeojsonArr:[],layerArr:[]},initialize:function(map,options){this._map=map;L.Util.setOptions(this,options);this._parsers={geojson:this._loadGeoJSON,json:this._loadGeoJSON,gpx:this._convertToGeoJSON,kml:this._convertToGeoJSON,xlsx:this._excelPointGeojson}},load:function(file,ext){var parser,reader;if(this._isParameterMissing(file,"file")){return false}if(!this._isFileSizeOk(file.size)){return false}parser=this._getParser(file.name,ext);if(!parser){return false}reader=new FileReader;reader.onload=L.Util.bind(function(e){var layer;var that=this;var coordinates=[];try{if(parser.ext!="xlsx"){that.fire("data:loading",{filename:file.name,format:parser.ext});layer=parser.processor.call(that,e.target.result,parser.ext);that.fire("data:loaded",{layer:layer,filename:file.name,format:parser.ext})}else{that.fire("data:loading",{filename:file.name,format:parser.ext});readXlsxFile(file).then(function(data){coordinates=getGpsPoint(data);if(coordinates.length>0){layer=parser.processor.call(that,coordinates);that.fire("data:loaded",{layer:layer,filename:file.name,format:parser.ext})}}),function(error){console.error(error)}}}catch(err){this.fire("data:error",{error:err})}},this);if(!file.testing){reader.readAsText(file)}return reader},loadMultiple:function(files,ext){var readers=[];if(files[0]){files=Array.prototype.slice.apply(files);while(files.length>0){readers.push(this.load(files.shift(),ext))}}return readers},loadData:function(data,name,ext){var parser;var layer;if(this._isParameterMissing(data,"data")||this._isParameterMissing(name,"name")){return}if(!this._isFileSizeOk(data.length)){return}parser=this._getParser(name,ext);if(!parser){return}try{this.fire("data:loading",{filename:name,format:parser.ext});layer=parser.processor.call(this,data,parser.ext);this.fire("data:loaded",{layer:layer,filename:name,format:parser.ext})}catch(err){this.fire("data:error",{error:err})}},_isParameterMissing:function(v,vname){if(typeof v==="undefined"){this.fire("data:error",{error:new Error("Missing parameter: "+vname)});return true}return false},_getParser:function(name,ext){var parser;ext=ext||name.split(".").pop();parser=this._parsers[ext];if(!parser){this.fire("data:error",{error:new Error("Unsupported file type ("+ext+")")});return undefined}return{processor:parser,ext:ext}},_isFileSizeOk:function(size){var fileSize=(size/1024).toFixed(4);if(fileSize>this.options.fileSizeLimit){this.fire("data:error",{error:new Error("File size exceeds limit ("+fileSize+" > "+this.options.fileSizeLimit+"kb)")});return false}return true},_loadGeoJSON:function _loadGeoJSON(content){var layer;if(typeof content==="string"){content=JSON.parse(content)}this.options.GpsKmlGeojsonArr=[];this.options.GpsKmlGeojsonArr.push(content);layer=this.options.layer(content,this.options.layerOptions);this.options.layerArr.push(layer);if(layer.getLayers().length===0){throw new Error("GeoJSON has no valid layers.")}if(this.options.addToMap){layer.addTo(this._map)}return layer},_convertToGeoJSON:function _convertToGeoJSON(content,format){var geojson;if(typeof content==="string"){content=(new window.DOMParser).parseFromString(content,"text/xml")}geojson=toGeoJSON[format](content);return this._loadGeoJSON(geojson)},_excelPointGeojson:function _excelPointGeojson(excelConvertArr){if(this.options.MultiPoint){if(excelConvertArr.length>0){var lnglat=[];for(let i=0;i<excelConvertArr.length;i++){var x=excelConvertArr[i][0]*1;var y=excelConvertArr[i][1]*1;var coordinate=[y,x];lnglat.push(coordinate)}if(this.options.addToMap){if(lnglat.length>0){var geojsonArr=[];var pointToFeature=this._MultiPointToFeature(lnglat);geojsonArr.push(pointToFeature);var geojsonPoint=this._featureCollection(geojsonArr)}}return this._loadGeoJSON(geojsonPoint)}}else{if(excelConvertArr.length>0){var lnglat=[];for(let i=0;i<excelConvertArr.length;i++){var x=excelConvertArr[i][0]*1;var y=excelConvertArr[i][1]*1;var coordinate=[y,x];var properties={name:`${i}`};var pointToFeature=this._pointToFeature(coordinate,properties);lnglat.push(pointToFeature)}if(this.options.addToMap){if(lnglat.length>0){var geojsonPoint=this._featureCollection(lnglat);return this._loadGeoJSON(geojsonPoint)}}}}},_pointToFeature:function _pointToFeature(coordinates,properties,options){return this._feature({type:"Point",coordinates:coordinates},properties,options)},_MultiPointToFeature:function _MultiPointToFeature(coordinates,properties,options){return this._feature({type:"MultiPoint",coordinates:coordinates},properties,options)},_feature:function _feature(geometry,properties,options){var feat={type:"Feature"};feat.properties=properties||{};feat.geometry=geometry;return feat},_featureCollection:function _featureCollection(features){var fc={type:"FeatureCollection"};fc.features=features;return fc}});const getGpsPoint=function(data){var newXYArr=[];for(var i=0;i<data.length;i++){var Arr=data[i];for(var j=0;j<Arr.length;j++){newXYArr[i]=Arr.filter((_,j)=>{return j!==0})}}return newXYArr};var FileLayerLoad=L.Control.extend({statics:{TITLE:"Load local file (GPX, KML, GeoJSON,XLSX)",LABEL:"&#8965;"},options:{position:"topleft",fitBounds:true,flyTo:true,addToMap:true,fileSizeLimit:1024,MultiPoint:false},initialize:function(options){L.Util.setOptions(this,options);this.loader=null},onAdd:function(map){this.loader=L.FileLayer.fileLoader(map,this.options);this.loader.on("data:loaded",function(e){if(this.options.fitBounds){if(this.options.flyTo){window.setTimeout(function(){if(e.layer){var scale=this.map.getZoom();if(scale>18){this.map.setZoom(15)}var bounds=e.layer.getBounds();var zoom=map.getBoundsZoom(bounds);var swPoint=map.project(bounds.getSouthWest(),zoom);var nePoint=map.project(bounds.getNorthEast(),zoom);var center=map.unproject(swPoint.add(nePoint).divideBy(2),zoom);map.flyTo(center,zoom)}else if(e.featureGroup){var bounds=e.featureGroup.getBounds();var zoom=map.getBoundsZoom(bounds);var swPoint=map.project(bounds.getSouthWest(),zoom);var nePoint=map.project(bounds.getNorthEast(),zoom);var center=map.unproject(swPoint.add(nePoint).divideBy(2),zoom);map.flyTo(center,zoom)}},500)}else{window.setTimeout(function(){if(e.layer){map.fitBounds(e.layer.getBounds())}else if(e.featureGroup){map.fitBounds(e.featureGroup.getBounds())}},500)}}},this);this._initDragAndDrop(map);return this._initContainer()},_initDragAndDrop:function(map){var callbackName;var thisLoader=this.loader;var dropbox=map._container;var callbacks={dragenter:function(){map.scrollWheelZoom.disable()},dragleave:function(){map.scrollWheelZoom.enable()},dragover:function(e){e.stopPropagation();e.preventDefault()},drop:function(e){e.stopPropagation();e.preventDefault();thisLoader.loadMultiple(e.dataTransfer.files);map.scrollWheelZoom.enable()}};for(callbackName in callbacks){if(callbacks.hasOwnProperty(callbackName)){dropbox.addEventListener(callbackName,callbacks[callbackName],false)}}},_initContainer:function(){var thisLoader=this.loader;var fileInput;var zoomName="leaflet-control-filelayer leaflet-control-zoom";var barName="leaflet-bar";var partName=barName+"-part";var container=L.DomUtil.create("div",zoomName+" "+barName);var link=L.DomUtil.create("a",zoomName+"-in "+partName,container);link.innerHTML=L.Control.FileLayerLoad.LABEL;link.href="#";link.title=L.Control.FileLayerLoad.TITLE;fileInput=L.DomUtil.create("input","hidden",container);fileInput.type="file";fileInput.multiple="multiple";if(!this.options.formats){fileInput.accept=".gpx,.kml,.json,.geojson,.xlsx"}else{fileInput.accept=this.options.formats.join(",")}fileInput.style.display="none";fileInput.addEventListener("change",function(e){thisLoader.loadMultiple(this.files);this.value=""},false);L.DomEvent.disableClickPropagation(container);L.DomEvent.on(link,"click",function(e){fileInput.click();e.preventDefault()});return container}});L.FileLayer={};L.FileLayer.FileLoader=FileLoader;L.FileLayer.fileLoader=function(map,options){return new L.FileLayer.FileLoader(map,options)};L.Control.FileLayerLoad=FileLayerLoad;L.Control.fileLayerLoad=function(options){return new L.Control.FileLayerLoad(options)}},window);